language: cpp
dist: xenial

addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
      - llvm-toolchain-xenial-6.0
    packages:
      - cmake
      - g++-7
      - g++-8
      - clang-5.0
      - clang-6.0
      - ninja-build
      - python-pygments
      - python3-pip
  homebrew:
    packages:
      - ninja
      - shunit2

os: linux
env:
  - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
  - MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"      
  - MATRIX_EVAL="CC=clang-6.0 && CXX=clang++-6.0"
  - MATRIX_EVAL="CC=clang-5.0 && CXX=clang++-5.0"

matrix:
  include:
    - os: windows
      name: "Windows Visual Studio 15 2017"
      script:
        - cmake --version
        - mkdir build && cd build && cmake .. -G "Visual Studio 15 2017" -A x64
        - cmake --build . --config Debug
        - ctest -C Debug

    - os: osx
      osx_image: xcode10.2
      compiler: clang
      # empty matrix eval to avoid pollution
      env: 
        - MATRIX_EVAL=""

    ## special build agent for enabling c++20
    - os: linux
      name: "c++20 (clang-8)"
      env:
        - MATRIX_EVAL="CC=clang-8 && CXX=clang++-8"
      before_script:
        - wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key|sudo apt-key add -
        - echo "deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-8 main" | sudo tee -a /etc/apt/sources.list
        - sudo apt-get update -qq
        - sudo apt-get install clang-8 clang-tools-8  -y
             

before_install:
  - eval "${MATRIX_EVAL}"
  

script: 
  - python3 -m pip install -r requirements.txt
  - cmake --version
  - mkdir build && cd build && cmake .. -G Ninja 
  - cmake --build . --config Debug
  - ctest -C Debug
